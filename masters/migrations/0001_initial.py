# Generated by Django 4.2 on 2025-07-26 11:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RequestSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('request_id', models.CharField(max_length=128, null=True, unique=True)),
                ('description', tinymce.models.HTMLField(null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='request_submissions/')),
                ('current_usertype', models.CharField(choices=[('CRO', 'Chief Relation Officer'), ('OE', 'Office Executive'), ('PRO', 'Public Relation Officer'), ('CAO', 'Chief Academic Officer'), ('director', 'Director'), ('AC', 'Admin Coordinator'), ('AA', 'Assistant Administrator'), ('FO', 'Finance Officer'), ('College', 'College')], max_length=30, null=True)),
                ('usertype_flow', models.JSONField(default=list, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('forwarded', 'Forwarded'), ('rejected', 'Rejected'), ('approved', 'Approved')], default='forwarded', max_length=30)),
                ('college', models.ForeignKey(limit_choices_to={'user__usertype': 'College'}, on_delete=django.db.models.deletion.PROTECT, related_name='college', to='users.userprofile')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_submissions', to='users.userprofile')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestSubmissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('title', models.CharField(max_length=180)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestSubmissionStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('usertype', models.CharField(choices=[('CRO', 'Chief Relation Officer'), ('OE', 'Office Executive'), ('PRO', 'Public Relation Officer'), ('CAO', 'Chief Academic Officer'), ('director', 'Director'), ('AC', 'Admin Coordinator'), ('AA', 'Assistant Administrator'), ('FO', 'Finance Officer'), ('College', 'College')], max_length=30)),
                ('next_usertype', models.CharField(choices=[('CRO', 'Chief Relation Officer'), ('OE', 'Office Executive'), ('PRO', 'Public Relation Officer'), ('CAO', 'Chief Academic Officer'), ('director', 'Director'), ('AC', 'Admin Coordinator'), ('AA', 'Assistant Administrator'), ('FO', 'Finance Officer'), ('College', 'College')], max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('forwarded', 'Forwarded'), ('rejected', 'Rejected'), ('approved', 'Approved')], default='forwarded', max_length=20)),
                ('remark', tinymce.models.HTMLField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='masters.requestsubmission')),
                ('submitted_users', models.ManyToManyField(related_name='submitted_users', to='users.userprofile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.userprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='requestsubmission',
            name='title',
            field=models.ForeignKey(limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, to='masters.requestsubmissiontype'),
        ),
        migrations.AddField(
            model_name='requestsubmission',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_submissions', to='users.userprofile'),
        ),
        migrations.CreateModel(
            name='HistoricalRequestSubmissionType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('title', models.CharField(max_length=180)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical request submission type',
                'verbose_name_plural': 'historical request submission types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRequestSubmissionStatusHistory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('usertype', models.CharField(choices=[('CRO', 'Chief Relation Officer'), ('OE', 'Office Executive'), ('PRO', 'Public Relation Officer'), ('CAO', 'Chief Academic Officer'), ('director', 'Director'), ('AC', 'Admin Coordinator'), ('AA', 'Assistant Administrator'), ('FO', 'Finance Officer'), ('College', 'College')], max_length=30)),
                ('next_usertype', models.CharField(choices=[('CRO', 'Chief Relation Officer'), ('OE', 'Office Executive'), ('PRO', 'Public Relation Officer'), ('CAO', 'Chief Academic Officer'), ('director', 'Director'), ('AC', 'Admin Coordinator'), ('AA', 'Assistant Administrator'), ('FO', 'Finance Officer'), ('College', 'College')], max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('forwarded', 'Forwarded'), ('rejected', 'Rejected'), ('approved', 'Approved')], default='forwarded', max_length=20)),
                ('remark', tinymce.models.HTMLField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masters.requestsubmission')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.userprofile')),
            ],
            options={
                'verbose_name': 'historical request submission status history',
                'verbose_name_plural': 'historical request submission status historys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRequestSubmission',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Mark as Active')),
                ('request_id', models.CharField(db_index=True, max_length=128, null=True)),
                ('description', tinymce.models.HTMLField(null=True)),
                ('attachment', models.TextField(blank=True, max_length=100, null=True)),
                ('current_usertype', models.CharField(choices=[('CRO', 'Chief Relation Officer'), ('OE', 'Office Executive'), ('PRO', 'Public Relation Officer'), ('CAO', 'Chief Academic Officer'), ('director', 'Director'), ('AC', 'Admin Coordinator'), ('AA', 'Assistant Administrator'), ('FO', 'Finance Officer'), ('College', 'College')], max_length=30, null=True)),
                ('usertype_flow', models.JSONField(default=list, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('forwarded', 'Forwarded'), ('rejected', 'Rejected'), ('approved', 'Approved')], default='forwarded', max_length=30)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('college', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'user__usertype': 'College'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.userprofile')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.userprofile')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('title', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masters.requestsubmissiontype')),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.userprofile')),
            ],
            options={
                'verbose_name': 'historical request submission',
                'verbose_name_plural': 'historical request submissions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
